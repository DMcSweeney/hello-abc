version: '3'

services:
  # Web server
  # web: 
  #   build: ./web/
  #   volumes: 
  #    - ./data:/data
  #    - ./web/src/:/src
  #    - ./logs:/var/log
  #   ports:
  #     - '5000:5000'
  #   environment:
  #     - FLASK_DEBUG=${FLASK_DEBUG}
  #   depends_on:
  #     - backend
  #     - mongo
  
  ## THE MAIN SERVICE 
  backend: 
    build: ./backend/
    ports:
     - '5001:5001'
    volumes: 
     - ${INPUT_DIR}:/data/inputs
     - ${OUTPUT_DIR}:/data/outputs
     - ./backend/src:/src
     - ./logs:/var/log
     - ./backend/models:/src/models
    command: flask run
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5001
      - FLASK_DEBUG=${FLASK_DEBUG}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - mongo
  ## CONQUEST SERVICE - handles dicom comms.
  conquest: 
    build: ./conquest/
    tty: true
    stdin_open: true
    ports:
      - '5004:80'
    volumes: 
     - conquest-store:/src/Conquest-DICOM-Server/data
  ## NoSQL database
  mongo:
    image: 'mongo:6.0-jammy'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - ./data/db:/data/db
    ports:
    - '5002:27017'
    logging:
      driver: "none"

  ## Web server for the db, useful for debugging
  mongo-express:
    image: 'mongo-express:1.0.2'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongo
    ports:
      - "5003:8081"
    logging:
      driver: "none"
  ## Job queue
  redis:
    image: redis:7.2.4
    ports:
      - "6379:6379"
  
  ## Worker processes
  gpu-workers:
    build: ./workers/
    command: rq worker -u redis://redis:6379 high default low
    volumes:
      - ${INPUT_DIR}:/data/inputs
      - ${OUTPUT_DIR}:/data/outputs
      - ./backend/src:/src
      - ./backend/models:/src/models
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    deploy:
      replicas: ${NUM_GPU_WORKERS}
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - redis

  cpu-workers:
    build: ./workers/
    command: rq worker -u redis://redis:6379 default low
    volumes:
      - ${INPUT_DIR}:/data/inputs
      - ${OUTPUT_DIR}:/data/outputs
      - ./backend/src:/src
      - ./backend/models:/src/models
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    deploy:
      replicas: ${NUM_CPU_WORKERS}
    depends_on:
      - redis

## Should everything be a volume?    
volumes:
  conquest-store: